{
  "Query": {
    "prefix": "query",
    "body": [
      "import format from 'pg-format'",
      "import type { ApolloContext } from '../../apollo/server'",
      "import type { QueryResolvers } from '../generated/graphql'",
      "import type { $1 as $2 } from '../generated/graphql'",
      "import { poolQuery } from '../../database/postgres'",
      "import { selectColumnFromField } from '../../utils/ORM'",
      "import $1 from './sql/$1.sql'",
      "",
      "export const Query: QueryResolvers<ApolloContext> = {",
      "  $1: async (_, __, { user }, info) => {",
      "    const columns = selectColumnFromField(info, $1FieldColumnMapping)",
      "",
      "    const { rows } = await poolQuery(format(await $1, columns))",
      "",
      "    return rows.map((row) => $1ORM(row))",
      "  },",
      "}",
      ""
    ],
    "description": "GraphQL Query Resolver"
  }
}
